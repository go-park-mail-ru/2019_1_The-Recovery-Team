definitions:
  handler.Error:
    properties:
      description:
        type: string
    type: object
  profile.Avatar:
    properties:
      avatar:
        example: upload/img/1.png
        type: string
    type: object
  profile.Create:
    properties:
      email:
        example: test@mail.ru
        type: string
      nickname:
        example: test
        type: string
      password:
        example: password
        type: string
    type: object
  profile.Created:
    properties:
      avatar:
        example: upload/img/1.png
        type: string
      email:
        example: test@mail.ru
        type: string
      id:
        example: 1
        type: integer
      nickname:
        example: test
        type: string
    type: object
  profile.ID:
    properties:
      id:
        example: 1
        type: integer
    type: object
  profile.Info:
    properties:
      avatar:
        example: upload/img/1.png
        type: string
      id:
        example: 1
        type: integer
      loss:
        example: 50
        type: integer
      nickname:
        example: test
        type: string
      record:
        example: 1500
        type: integer
      win:
        example: 100
        type: integer
    type: object
  profile.Login:
    properties:
      email:
        example: test@mail.ru
        type: string
      password:
        example: password
        type: string
    type: object
  profile.Profile:
    properties:
      avatar:
        example: upload/img/1.png
        type: string
      email:
        example: test@mail.ru
        type: string
      id:
        example: 1
        type: integer
      loss:
        example: 50
        type: integer
      nickname:
        example: test
        type: string
      record:
        example: 1500
        type: integer
      win:
        example: 100
        type: integer
    type: object
  profile.Profiles:
    properties:
      list:
        items:
          $ref: '#/definitions/profile.Info'
        type: array
      total:
        example: 50
        type: integer
    type: object
  profile.UpdateInfo:
    properties:
      email:
        example: test@mail.ru
        type: string
      nickname:
        example: test
        type: string
    type: object
  profile.UpdatePassword:
    properties:
      password:
        example: password
        type: string
      password_old:
        example: password_old
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /avatars:
    put:
      consumes:
      - multipart/form-data
      description: Update profile avatar
      operationId: put-avatar
      parameters:
      - description: Avatar
        in: body
        name: avatar
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Profile avatar is updated successfully
          schema:
            $ref: '#/definitions/profile.Avatar'
            type: object
        "400":
          description: Incorrect request data
        "403":
          description: Not authorized
        "500":
          description: Database error
      summary: Put avatar
  /profiles:
    get:
      description: Check profile existence with email or nickname
      operationId: get-profiles
      parameters:
      - description: Profile email
        in: path
        name: email
        type: string
      - description: Profile nickname
        in: path
        name: nickname
        type: string
      responses:
        "204":
          description: Profile found successfully
        "400":
          description: Incorrect request data
        "403":
          description: Not authorized
        "404":
          description: Not found
        "500":
          description: Database error
      summary: Get profiles
    post:
      consumes:
      - multipart/form-data
      description: Create profile
      operationId: post-profile
      parameters:
      - description: Email, nickname, password
        in: body
        name: profile_info
        required: true
        schema:
          $ref: '#/definitions/profile.Create'
          type: object
      - description: Avatar
        in: body
        name: avatar
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Profile created successfully
          schema:
            $ref: '#/definitions/profile.Created'
            type: object
        "400":
          description: Incorrect request data
        "409":
          description: Email or nickname already exists
        "422":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handler.Error'
            type: object
        "500":
          description: Database error
      summary: Post profile
  /profiles/{id}:
    get:
      description: Get profile info (for profile owner returns info with email)
      operationId: get-profile
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Profile found successfully
          schema:
            $ref: '#/definitions/profile.Profile'
            type: object
        "403":
          description: Not authorized
        "404":
          description: Not found
        "500":
          description: Database error
      summary: Get profile
    put:
      consumes:
      - application/json
      description: Update profile info
      operationId: put-profile
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      - description: Email, nickname
        in: body
        name: profile_info
        required: true
        schema:
          $ref: '#/definitions/profile.UpdateInfo'
          type: object
      responses:
        "204":
          description: Profile info is updated successfully
        "400":
          description: Incorrect request data
        "403":
          description: Not authorized
        "404":
          description: Not found
        "422":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handler.Error'
            type: object
        "500":
          description: Database error
      summary: Put profile
  /profiles/{id}/password:
    put:
      consumes:
      - application/json
      description: Update profile password
      operationId: put-profile_password
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      - description: Password
        in: body
        name: profile_info
        required: true
        schema:
          $ref: '#/definitions/profile.UpdatePassword'
          type: object
      responses:
        "204":
          description: Profile password is updated successfully
        "400":
          description: Incorrect request data
        "403":
          description: Not authorized
        "404":
          description: Not found
        "422":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handler.Error'
            type: object
        "500":
          description: Database error
      summary: Put profile password
  /scores:
    get:
      description: Get score
      operationId: get-score
      parameters:
      - description: limit number
        in: query
        name: limit
        type: integer
      - description: start index
        in: query
        name: start
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Scoreboard found successfully
          schema:
            $ref: '#/definitions/profile.Profiles'
            type: object
        "400":
          description: Incorrect request data
        "500":
          description: Database error
      summary: Get score
  /sessions:
    delete:
      description: Deletes client session
      operationId: delete-session
      responses:
        "200":
          description: Session is deleted successfully
        "403":
          description: Not authorized
        "404":
          description: Session not found
      summary: Delete session
    get:
      description: Get profile id of authorized client
      operationId: get-session
      produces:
      - application/json
      responses:
        "200":
          description: Profile ID found successfully
          schema:
            $ref: '#/definitions/profile.ID'
            type: object
        "403":
          description: Not authorized
      summary: Get session
    post:
      consumes:
      - application/json
      description: Creates client session
      operationId: post-session
      parameters:
      - description: Email, password
        in: body
        name: profile_login
        required: true
        schema:
          $ref: '#/definitions/profile.Login'
          type: object
      responses:
        "200":
          description: Session is created successfully
          schema:
            $ref: '#/definitions/profile.Profile'
            type: object
        "400":
          description: Incorrect request data
        "403":
          description: Not authorized
        "422":
          description: Invalid request data
          schema:
            $ref: '#/definitions/handler.Error'
            type: object
      summary: Post session
