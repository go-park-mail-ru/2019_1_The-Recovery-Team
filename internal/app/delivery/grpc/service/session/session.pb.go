// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session.proto

package session

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SessionId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionId) Reset()         { *m = SessionId{} }
func (m *SessionId) String() string { return proto.CompactTextString(m) }
func (*SessionId) ProtoMessage()    {}
func (*SessionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{0}
}

func (m *SessionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionId.Unmarshal(m, b)
}
func (m *SessionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionId.Marshal(b, m, deterministic)
}
func (m *SessionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionId.Merge(m, src)
}
func (m *SessionId) XXX_Size() int {
	return xxx_messageInfo_SessionId.Size(m)
}
func (m *SessionId) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionId.DiscardUnknown(m)
}

var xxx_messageInfo_SessionId proto.InternalMessageInfo

func (m *SessionId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProfileId struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfileId) Reset()         { *m = ProfileId{} }
func (m *ProfileId) String() string { return proto.CompactTextString(m) }
func (*ProfileId) ProtoMessage()    {}
func (*ProfileId) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{1}
}

func (m *ProfileId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfileId.Unmarshal(m, b)
}
func (m *ProfileId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfileId.Marshal(b, m, deterministic)
}
func (m *ProfileId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileId.Merge(m, src)
}
func (m *ProfileId) XXX_Size() int {
	return xxx_messageInfo_ProfileId.Size(m)
}
func (m *ProfileId) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileId.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileId proto.InternalMessageInfo

func (m *ProfileId) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Create struct {
	ProfileId            *ProfileId         `protobuf:"bytes,1,opt,name=profileId,proto3" json:"profileId,omitempty"`
	Expires              *duration.Duration `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Create) Reset()         { *m = Create{} }
func (m *Create) String() string { return proto.CompactTextString(m) }
func (*Create) ProtoMessage()    {}
func (*Create) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{2}
}

func (m *Create) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Create.Unmarshal(m, b)
}
func (m *Create) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Create.Marshal(b, m, deterministic)
}
func (m *Create) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Create.Merge(m, src)
}
func (m *Create) XXX_Size() int {
	return xxx_messageInfo_Create.Size(m)
}
func (m *Create) XXX_DiscardUnknown() {
	xxx_messageInfo_Create.DiscardUnknown(m)
}

var xxx_messageInfo_Create proto.InternalMessageInfo

func (m *Create) GetProfileId() *ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return nil
}

func (m *Create) GetExpires() *duration.Duration {
	if m != nil {
		return m.Expires
	}
	return nil
}

type Nothing struct {
	Dummy                bool     `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{3}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func (m *Nothing) GetDummy() bool {
	if m != nil {
		return m.Dummy
	}
	return false
}

func init() {
	proto.RegisterType((*SessionId)(nil), "session.SessionId")
	proto.RegisterType((*ProfileId)(nil), "session.ProfileId")
	proto.RegisterType((*Create)(nil), "session.Create")
	proto.RegisterType((*Nothing)(nil), "session.Nothing")
}

func init() { proto.RegisterFile("session.proto", fileDescriptor_3a6be1b361fa6f14) }

var fileDescriptor_3a6be1b361fa6f14 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x93, 0x54, 0x13, 0x33, 0xe2, 0x1f, 0x06, 0x0f, 0x35, 0x82, 0xca, 0x9e, 0x3c, 0xc8,
	0xa6, 0xb4, 0x8f, 0x60, 0x41, 0xbc, 0x88, 0xa4, 0x4f, 0xd0, 0xb2, 0xd3, 0xb8, 0x90, 0x76, 0xc2,
	0x66, 0x03, 0xfa, 0x2a, 0x3e, 0xad, 0xb8, 0x49, 0x36, 0x08, 0x39, 0xce, 0x7c, 0x3f, 0x66, 0x7e,
	0x1f, 0x5c, 0x34, 0xd4, 0x34, 0x9a, 0x8f, 0xb2, 0x36, 0x6c, 0x19, 0x93, 0x7e, 0xcc, 0xee, 0x4b,
	0xe6, 0xb2, 0xa2, 0xdc, 0xad, 0x77, 0xed, 0x3e, 0x57, 0xad, 0xd9, 0x5a, 0x0f, 0x8a, 0x3b, 0x48,
	0x37, 0x1d, 0xfa, 0xa6, 0xf0, 0x12, 0x22, 0xad, 0xe6, 0xe1, 0x63, 0xf8, 0x94, 0x16, 0x91, 0x56,
	0x7f, 0xe1, 0x87, 0xe1, 0xbd, 0xae, 0xe8, 0x5f, 0x78, 0xe2, 0x42, 0x86, 0xf8, 0xc5, 0xd0, 0xd6,
	0x12, 0x2e, 0x20, 0xad, 0x07, 0xcc, 0x01, 0xe7, 0x4b, 0x94, 0x83, 0x8f, 0x3f, 0x50, 0x8c, 0x10,
	0xae, 0x20, 0xa1, 0xaf, 0x5a, 0x1b, 0x6a, 0xe6, 0x91, 0xe3, 0x6f, 0x65, 0xe7, 0x29, 0x07, 0x4f,
	0xb9, 0xee, 0x3d, 0x8b, 0x81, 0x14, 0x0f, 0x90, 0xbc, 0xb3, 0xfd, 0xd4, 0xc7, 0x12, 0x6f, 0xe0,
	0x54, 0xb5, 0x87, 0xc3, 0xb7, 0xfb, 0x76, 0x56, 0x74, 0xc3, 0xf2, 0x27, 0x84, 0xa4, 0x2f, 0x83,
	0x39, 0xcc, 0x5e, 0xc9, 0xe2, 0xe8, 0xe1, 0x5b, 0x66, 0x13, 0x6e, 0x22, 0xc0, 0x67, 0x98, 0x6d,
	0xc8, 0xe2, 0x95, 0x0f, 0xbb, 0x72, 0xd9, 0xc4, 0x05, 0x11, 0xe0, 0x02, 0xe2, 0x35, 0x55, 0x64,
	0x69, 0xf2, 0xc3, 0xb5, 0xdf, 0xf5, 0xc2, 0x22, 0xd8, 0xc5, 0xae, 0xd9, 0xea, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x5a, 0x08, 0x69, 0x7a, 0xa9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionClient is the client API for Session service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionClient interface {
	Get(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*ProfileId, error)
	Set(ctx context.Context, in *Create, opts ...grpc.CallOption) (*SessionId, error)
	Delete(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*Nothing, error)
}

type sessionClient struct {
	cc *grpc.ClientConn
}

func NewSessionClient(cc *grpc.ClientConn) SessionClient {
	return &sessionClient{cc}
}

func (c *sessionClient) Get(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*ProfileId, error) {
	out := new(ProfileId)
	err := c.cc.Invoke(ctx, "/session.Session/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionClient) Set(ctx context.Context, in *Create, opts ...grpc.CallOption) (*SessionId, error) {
	out := new(SessionId)
	err := c.cc.Invoke(ctx, "/session.Session/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionClient) Delete(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/session.Session/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServer is the server API for Session service.
type SessionServer interface {
	Get(context.Context, *SessionId) (*ProfileId, error)
	Set(context.Context, *Create) (*SessionId, error)
	Delete(context.Context, *SessionId) (*Nothing, error)
}

func RegisterSessionServer(s *grpc.Server, srv SessionServer) {
	s.RegisterService(&_Session_serviceDesc, srv)
}

func _Session_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Session/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServer).Get(ctx, req.(*SessionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Create)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Session/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServer).Set(ctx, req.(*Create))
	}
	return interceptor(ctx, in, info, handler)
}

func _Session_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Session/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServer).Delete(ctx, req.(*SessionId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Session_serviceDesc = grpc.ServiceDesc{
	ServiceName: "session.Session",
	HandlerType: (*SessionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Session_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Session_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Session_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "session.proto",
}
